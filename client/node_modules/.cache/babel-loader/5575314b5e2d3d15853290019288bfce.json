{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nathanwigen/general_assembly/sei/Pheonix/unit_4/p4/Game-Thoughts/client/src/container/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom'; // import Flavors from '../screens/Flavors';\n// import FoodCreate from '../screens/FoodCreate';\n// import FoodDetail from '../screens/FoodDetail';\n// import FoodEdit from '../screens/FoodEdit';\n// import Foods from '../screens/Foods';\n\nimport { destroyBlog, getAllBlogs, postBlog, putBlog } from '../services/blogs';\nexport default function MainContainer(props) {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      const blogData = await getAllBlog();\n      setBlogs(blogData);\n    };\n\n    fetchBlogs();\n  }, []);\n\n  const handleCreate = async blogData => {\n    const newBlog = await postBlog(blogData);\n    setBlogs(prevState => [...prevState, newBlog]);\n    history.push('/blogs');\n  };\n\n  const handleUpdate = async (id, blogData) => {\n    const updatedBlog = await putBlog(id, blogData);\n    setBlogs(prevState => prevState.map(blog => {\n      return blog.id === Number(id) ? updatedBlog : blog;\n    }));\n    history.push('/blogs');\n  };\n\n  const handleDelete = async id => {\n    await destroyBlog(id);\n    setBlogs(prevState => prevState.filter(blog => blog.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/blogs/:id/edit\",\n      children: /*#__PURE__*/_jsxDEV(FoodEdit, {\n        blogs: blogs,\n        handleUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods/new\",\n      children: /*#__PURE__*/_jsxDEV(FoodCreate, {\n        handleCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods/:id\",\n      children: /*#__PURE__*/_jsxDEV(FoodDetail, {\n        flavors: flavors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods\",\n      children: /*#__PURE__*/_jsxDEV(Foods, {\n        foods: foods,\n        handleDelete: handleDelete,\n        currentUser: props.currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContainer, \"Wt6f+3yG2KEZcNsEtKAOH0i1U6M=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/nathanwigen/general_assembly/sei/Pheonix/unit_4/p4/Game-Thoughts/client/src/container/MainContainer.jsx"],"names":["useState","useEffect","Switch","Route","useHistory","destroyBlog","getAllBlogs","postBlog","putBlog","MainContainer","props","blogs","setBlogs","history","fetchBlogs","blogData","getAllBlog","handleCreate","newBlog","prevState","push","handleUpdate","id","updatedBlog","map","blog","Number","handleDelete","filter","flavors","foods","currentUser"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C,C,CAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,EAA6CC,OAA7C,QAA4D,mBAA5D;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMa,OAAO,GAAGT,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,UAAU,EAAjC;AACAJ,MAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,UAAU;AACX,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,YAAY,GAAG,MAAOF,QAAP,IAAoB;AACvC,UAAMG,OAAO,GAAG,MAAMX,QAAQ,CAACQ,QAAD,CAA9B;AACAH,IAAAA,QAAQ,CAACO,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAd,CAAR;AACAL,IAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAG,OAAOC,EAAP,EAAWP,QAAX,KAAwB;AAC3C,UAAMQ,WAAW,GAAG,MAAMf,OAAO,CAACc,EAAD,EAAKP,QAAL,CAAjC;AACAH,IAAAA,QAAQ,CAACO,SAAS,IAAIA,SAAS,CAACK,GAAV,CAAcC,IAAI,IAAI;AAC1C,aAAOA,IAAI,CAACH,EAAL,KAAYI,MAAM,CAACJ,EAAD,CAAlB,GAAyBC,WAAzB,GAAuCE,IAA9C;AACD,KAFqB,CAAd,CAAR;AAGAZ,IAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACD,GAND;;AAQA,QAAMO,YAAY,GAAG,MAAOL,EAAP,IAAc;AACjC,UAAMjB,WAAW,CAACiB,EAAD,CAAjB;AACAV,IAAAA,QAAQ,CAACO,SAAS,IAAIA,SAAS,CAACS,MAAV,CAAiBH,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAArC,CAAd,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,MAAD;AAAA,4BAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEX,KAAjB;AAAwB,QAAA,YAAY,EAAEU;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,YAAY,EAAEJ;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEY;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEC,KADT;AAEE,QAAA,YAAY,EAAEH,YAFhB;AAGE,QAAA,WAAW,EAAEjB,KAAK,CAACqB;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAxDuBtB,a;UAENL,U;;;KAFMK,a","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\n// import Flavors from '../screens/Flavors';\n// import FoodCreate from '../screens/FoodCreate';\n// import FoodDetail from '../screens/FoodDetail';\n// import FoodEdit from '../screens/FoodEdit';\n// import Foods from '../screens/Foods';\nimport { destroyBlog, getAllBlogs, postBlog, putBlog } from '../services/blogs'\n\nexport default function MainContainer(props) {\n  const [blogs, setBlogs] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      const blogData = await getAllBlog();\n      setBlogs(blogData);\n    }\n    fetchBlogs();\n  }, [])\n\n  const handleCreate = async (blogData) => {\n    const newBlog = await postBlog(blogData);\n    setBlogs(prevState => [...prevState, newBlog]);\n    history.push('/blogs');\n  }\n\n  const handleUpdate = async (id, blogData) => {\n    const updatedBlog = await putBlog(id, blogData);\n    setBlogs(prevState => prevState.map(blog => {\n      return blog.id === Number(id) ? updatedBlog : blog\n    }))\n    history.push('/blogs');\n  }\n\n  const handleDelete = async (id) => {\n    await destroyBlog(id);\n    setBlogs(prevState => prevState.filter(blog => blog.id !== id))\n  }\n\n  return (\n    <Switch>\n      {/* <Route path='/flavors'>\n        <Flavors flavors={flavors} />\n      </Route> */}\n      <Route path='/blogs/:id/edit'>\n        <FoodEdit blogs={blogs} handleUpdate={handleUpdate} />\n      </Route>\n      <Route path='/foods/new'>\n        <FoodCreate handleCreate={handleCreate} />\n      </Route>\n      {/* Here, we're adding a route for our single food screen */}\n      {/* we're passing it \"flavors\" to use in our drop down form */}\n      <Route path='/foods/:id'>\n        <FoodDetail flavors={flavors} />\n      </Route>\n      <Route path='/foods'>\n        <Foods\n          foods={foods}\n          handleDelete={handleDelete}\n          currentUser={props.currentUser}\n        />\n      </Route>\n    </Switch>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}