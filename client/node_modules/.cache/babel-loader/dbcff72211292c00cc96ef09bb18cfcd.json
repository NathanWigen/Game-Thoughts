{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nathanwigen/general_assembly/sei/Pheonix/unit_4/p4/Game-Thoughts/client/src/screens/BlogShow/BlogShow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getOneBlog } from '../../services/blogs';\nimport { postComment } from '../../services/comments';\nimport CommentCreate from '../CommentCreate/CommentCreate';\nexport default function BlogShow() {\n  _s();\n\n  const [blog, setBlog] = useState({});\n  const [comments, setComments] = useState([]);\n  const [commentToggle, setCommentToggle] = useState(false);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const getBlog = async () => {\n      const blogData = await getOneBlog(id);\n      setBlog(blogData);\n      setComments(blogData.comments);\n    };\n\n    getBlog();\n  }, [comments]);\n\n  const handleCreate = async (id, commentData) => {\n    const newComment = await postComment(Number(id), commentData);\n    setComments(prevState => [...prevState, newComment]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [blog && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: blog.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments && comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: comment.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          commentToggle ? setCommentToggle(false) : setCommentToggle(true);\n        },\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), commentToggle && /*#__PURE__*/_jsxDEV(CommentCreate, {\n        handleCreate: handleCreate,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogShow, \"+bkvNuxsC4eunV3OJDycqq9hJrQ=\", false, function () {\n  return [useParams];\n});\n\n_c = BlogShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogShow\");","map":{"version":3,"sources":["/Users/nathanwigen/general_assembly/sei/Pheonix/unit_4/p4/Game-Thoughts/client/src/screens/BlogShow/BlogShow.jsx"],"names":["React","useEffect","useState","useParams","getOneBlog","postComment","CommentCreate","BlogShow","blog","setBlog","comments","setComments","commentToggle","setCommentToggle","id","getBlog","blogData","handleCreate","commentData","newComment","Number","prevState","map","comment","title","content"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASX,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,OAAO,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMZ,UAAU,CAACU,EAAD,CAAjC;AACAL,MAAAA,OAAO,CAACO,QAAD,CAAP;AACAL,MAAAA,WAAW,CAACK,QAAQ,CAACN,QAAV,CAAX;AACD,KAJD;;AAKAK,IAAAA,OAAO;AACR,GAPQ,EAOP,CAACL,QAAD,CAPO,CAAT;;AASA,QAAMO,YAAY,GAAG,OAAOH,EAAP,EAAWI,WAAX,KAA2B;AAC9C,UAAMC,UAAU,GAAG,MAAMd,WAAW,CAACe,MAAM,CAACN,EAAD,CAAP,EAAaI,WAAb,CAApC;AACAP,IAAAA,WAAW,CAACU,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeF,UAAf,CAAd,CAAX;AACD,GAHD;;AAKA,sBACE;AAAA,eAEIX,IAAI,iBAAI;AAAA,gBAAKA,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,YAFZ,eAIE;AAAA,gBACGJ,QAAQ,IACPA,QAAQ,CAACY,GAAT,CAAaC,OAAO,iBAClB;AAAA,gCACA;AAAA,oBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oBAAID,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBb,UAAAA,aAAa,GACXC,gBAAgB,CAAC,KAAD,CADL,GAEbA,gBAAgB,CAAC,IAAD,CAFhB;AAID,SALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAQID,aAAa,iBACb,QAAC,aAAD;AAAe,QAAA,YAAY,EAAEK,YAA7B;AAA2C,QAAA,EAAE,EAAEH;AAA/C;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAjDuBP,Q;UAIPJ,S;;;KAJOI,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getOneBlog } from '../../services/blogs'\nimport { postComment } from '../../services/comments'\nimport CommentCreate from '../CommentCreate/CommentCreate'\n\nexport default function BlogShow() {\n  const [blog, setBlog] = useState({})\n  const [comments, setComments] = useState([])\n  const [commentToggle, setCommentToggle] = useState(false)\n  const { id } = useParams()\n  \n  useEffect(() => {\n    const getBlog = async () => {\n      const blogData = await getOneBlog(id)\n      setBlog(blogData)\n      setComments(blogData.comments)\n    }\n    getBlog()\n  },[comments])\n\n  const handleCreate = async (id, commentData) => {\n    const newComment = await postComment(Number(id), commentData)\n    setComments(prevState => [...prevState, newComment])\n  }\n\n  return (\n    <div>\n      {\n        blog && <h3>{blog.id}</h3>\n      }\n      <div>\n        {comments &&\n          comments.map(comment => (\n            <div>\n            <h4>{comment.title}</h4>\n            <p>{comment.content}</p>\n            </div>\n          ))\n        }\n      </div>\n      <div>\n        <button onClick={() => {\n          commentToggle ?\n            setCommentToggle(false) :\n          setCommentToggle(true)\n\n        }}>Add Comment</button>\n        {\n          commentToggle && \n          <CommentCreate handleCreate={handleCreate} id={id}/>\n        }\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}