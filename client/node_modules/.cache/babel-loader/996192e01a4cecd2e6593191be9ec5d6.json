{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nathanwigen/general_assembly/sei/Pheonix/unit_4/p4/Game-Thoughts/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport './App.css';\nimport Layout from './layouts/Layout';\nimport BlogCreate from './screens/BlogCreate';\nimport BlogEdit from './screens/BlogEdit';\nimport Blogs from './screens/Blogs';\nimport Login from './screens/Login';\nimport Register from './screens/Register';\nimport BlogShow from './screens/BlogShow';\nimport { loginUser, registerUser, removeToken, verifyUser } from './services/auth';\nimport { postBlog, getAllBlogs, destroyBlog, putBlog, getOneBlog } from './services/blogs';\n\nfunction App() {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    const getBlogs = async () => {\n      const blogData = await getAllBlogs();\n      console.log(blogData);\n      setBlogs(blogData);\n    };\n\n    getBlogs();\n  }, []);\n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setCurrentUser(userData);\n\n      if (!userData) {\n        history.push('/');\n      }\n    };\n\n    handleVerify();\n  }, [history]);\n\n  const handleLogin = async loginData => {\n    const userData = await loginUser(loginData);\n    setCurrentUser(userData);\n    history.push('/blogs');\n  };\n\n  const handleRegister = async registerData => {\n    const userData = await registerUser(registerData);\n    setCurrentUser(userData);\n    history.push('/');\n  };\n\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('authToken');\n    removeToken();\n    history.push('/');\n  };\n\n  const handleCreate = async blogData => {\n    const newBlog = await postBlog(blogData);\n    setBlogs(prevState => [...prevState, newBlog]);\n    history.push('/blogs');\n  };\n\n  const handleDelete = async id => {\n    await destroyBlog(id);\n    setBlogs(prevState => prevState.filter(blog => blog.id !== id));\n  };\n\n  const handleUpdate = async (id, blogData) => {\n    const updatedBlogs = await putBlog(id, blogData);\n    setBlogs(prevState => prevState.map(blog => {\n      return blog.id === Number(id) ? updatedBlogs : blog;\n    }));\n    history.push('/blogs');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      currentUser: currentUser,\n      handleLogout: handleLogout,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/blogs/:id/edit\",\n          children: /*#__PURE__*/_jsxDEV(BlogEdit, {\n            blogs: blogs,\n            handleUpdate: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/blogs/create\",\n          children: /*#__PURE__*/_jsxDEV(BlogCreate, {\n            handleCreate: handleCreate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/blogs/:id\",\n          children: /*#__PURE__*/_jsxDEV(BlogShow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/blogs\",\n          children: /*#__PURE__*/_jsxDEV(Blogs, {\n            blogs: blogs,\n            currentUser: currentUser,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lp0dwyR2BeRAgjeHg/E+xIIZC+A=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nathanwigen/general_assembly/sei/Pheonix/unit_4/p4/Game-Thoughts/client/src/App.js"],"names":["useState","useEffect","Switch","Route","useHistory","Layout","BlogCreate","BlogEdit","Blogs","Login","Register","BlogShow","loginUser","registerUser","removeToken","verifyUser","postBlog","getAllBlogs","destroyBlog","putBlog","getOneBlog","App","blogs","setBlogs","currentUser","setCurrentUser","history","getBlogs","blogData","console","log","handleVerify","userData","push","handleLogin","loginData","handleRegister","registerData","handleLogout","localStorage","removeItem","handleCreate","newBlog","prevState","handleDelete","id","filter","blog","handleUpdate","updatedBlogs","map","Number"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nimport './App.css';\nimport Layout from './layouts/Layout';\nimport BlogCreate from './screens/BlogCreate';\nimport BlogEdit from './screens/BlogEdit';\nimport Blogs from './screens/Blogs';\nimport Login from './screens/Login';\nimport Register from './screens/Register'\nimport BlogShow from './screens/BlogShow'\nimport { loginUser, registerUser, removeToken, verifyUser } from './services/auth';\nimport {postBlog, getAllBlogs, destroyBlog, putBlog, getOneBlog} from './services/blogs'\n\n\n\nfunction App() {\n  const [blogs, setBlogs] = useState([])\n\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory()\n\n  useEffect(() => {\n    const getBlogs = async () => {\n      const blogData = await getAllBlogs()\n      console.log(blogData);\n      setBlogs(blogData)\n    }\n    getBlogs()\n  }, [])\n  \n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setCurrentUser(userData);\n      if (!userData) {\n        history.push('/')\n      }\n    }\n    handleVerify();\n  }, [history])\n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData);\n    setCurrentUser(userData);\n    history.push('/blogs');\n  }\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData);\n    setCurrentUser(userData);\n    history.push('/');\n  }\n\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('authToken');\n    removeToken();\n    history.push('/');\n  }\n\n  const handleCreate = async (blogData) => {\n    const newBlog = await postBlog(blogData)\n    setBlogs(prevState => [...prevState, newBlog])\n    history.push('/blogs')\n  }\n\n  const handleDelete = async (id) => {\n    await destroyBlog(id)\n    setBlogs(prevState => prevState.filter(blog=> blog.id !== id))\n  }\n\n  const handleUpdate = async (id, blogData) => {\n    const updatedBlogs = await putBlog(id, blogData)\n    setBlogs(prevState => prevState.map(blog => {\n      return blog.id === Number(id) ? updatedBlogs : blog\n    }))\n    history.push('/blogs')\n  }\n\n\n\n  return (\n    <div>\n      <Layout\n        currentUser={currentUser}\n        handleLogout={handleLogout}\n      >\n        <Switch>\n          \n          <Route path='/register'>\n            <Register handleRegister={handleRegister} />\n          </Route>\n          \n          <Route path='/blogs/:id/edit'>\n            <BlogEdit blogs={blogs} handleUpdate={handleUpdate}/>\n          </Route>\n          \n          <Route path='/blogs/create'>\n            <BlogCreate handleCreate={handleCreate}/>\n          </Route>\n\n          <Route path='/blogs/:id'>\n            <BlogShow />\n          </Route>\n\n          <Route path='/blogs'>\n            <Blogs blogs={blogs} currentUser={currentUser} handleDelete={handleDelete}/>\n          </Route>\n        \n          <Route path='/'>\n            <Login handleLogin={handleLogin} />\n          </Route> \n      \n          \n\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}